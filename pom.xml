<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>ubrr-demo</artifactId>
  <version>${revision}</version>

  <packaging>pom</packaging>

  <modules>
    <module>oop-demo</module>
    <module>strings</module>
    <module>io</module>
    <module>fp</module>
    <module>exceptions</module>
    <module>collections</module>
    <module>concurrency</module>
    <module>jdbc</module>
    <module>formats</module>
    <module>web</module>
  </modules>

  <properties>

    <!--region General-->
    <maven.compiler.release>16</maven.compiler.release>
    <revision>1.0-SNAPSHOT</revision>
    <minimal.maven.version>3.8.1</minimal.maven.version>
    <!--endregion-->

    <!--region BOM-->

    <!--endregion-->

    <!--region libs-->
    <lombok.version>1.18.20</lombok.version>
    <vavr.version>1.0.0-alpha-3</vavr.version>
    <h2.version>1.4.200</h2.version>
    <postgresql.version>42.2.21</postgresql.version>
    <HikariCP.version>4.0.3</HikariCP.version>
    <logback-classic.version>1.3.0-alpha5</logback-classic.version>

    <checker.version>3.14.0</checker.version>
    <annotations.version>21.0.1</annotations.version>
    <jcip-annotations.version>1.0</jcip-annotations.version>
    <spotbugs.version>4.2.3</spotbugs.version>
    <error_prone_annotations.version>2.7.1</error_prone_annotations.version>

    <dom.version>2.3.0-jaxb-1.0.6</dom.version>
    <jaxb.version>2.3.1</jaxb.version>
    <javax.activation-api.version>1.2.0</javax.activation-api.version>
    <jaxb-runtime.version>3.0.2-b01</jaxb-runtime.version>
    <jdom2.version>2.0.6</jdom2.version>
    <rt.version>2.3.4</rt.version>

    <tomcat.version>9.0.46</tomcat.version>
    <javaee-api.version>8.0.1</javaee-api.version>
    <!--endregion-->

    <!--region test-libs-->
    <junit-jupiter.version>5.7.2</junit-jupiter.version>
    <assertj.version>3.19.0</assertj.version>
    <!--endregion-->

    <!--region plugins-->
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
    <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
    <sonar-maven-plugin.version>2.7.1</sonar-maven-plugin.version>
    <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
    <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    <maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
    <!--endregion-->

  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>io.vavr</groupId>
        <artifactId>vavr</artifactId>
        <version>${vavr.version}</version>
      </dependency>

      <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne) -->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>${checker.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>${annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>${jcip-annotations.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error_prone_annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--endregion-->

      <dependency>
        <groupId>org.w3c</groupId>
        <artifactId>dom</artifactId>
        <version>${dom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom2</artifactId>
        <version>${jdom2.version}</version>
      </dependency>

      <!--region JAX-B -->
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>javax.activation-api</artifactId>
        <version>${javax.activation-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jaxb</groupId>
        <artifactId>jaxb-runtime</artifactId>
        <version>${jaxb-runtime.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <!--endregion-->

      <dependency>
        <groupId>com.sun.xml.ws</groupId>
        <artifactId>rt</artifactId>
        <version>${rt.version}</version>
      </dependency>

      <!--region H2 -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${HikariCP.version}</version>
      </dependency>
      <!-- endregion -->

      <!--region Test dependency management (JUnit-Jupiter, AssertJ, Hamcrest, Mockito, JUnit-Vintage)-->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <!--endregion-->

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-classic.version}</version>
        <optional>true</optional>
      </dependency>

      <!--region Tomcat-->
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-catalina</artifactId>
        <version>${tomcat.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-jasper</artifactId>
        <version>${tomcat.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>${javaee-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--endregion-->

      <!--region modules-->
      <dependency>
        <groupId>org.example</groupId>
        <artifactId>fp</artifactId>
        <version>${revision}</version>
      </dependency>
      <!--endregion-->

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
    </dependency>

    <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne) -->
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
    </dependency>
    <!--endregion-->

    <!--region Test dependencies - JUnit Jupiter, AssertJ, Hamcrest, Mockito -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
    </dependency>
    <!--endregion-->

  </dependencies>

  <build>

    <defaultGoal>clean verify</defaultGoal>

    <pluginManagement>
      <plugins>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <arg>-parameters</arg>
              <arg>--enable-preview</arg>
              <!--<arg>-Xlint:preview</arg>-->
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <argLine>--enable-preview</argLine>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
          <!--<configuration>-->
          <!--  <webappDirectory>/sample/servlet/container/deploy/directory</webappDirectory>-->
          <!--</configuration>-->
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${properties-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <files>
                  <!--suppress MavenModelInspection -->
                  <file>${maven.multiModuleProjectDirectory}/maven.properties</file>
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
            <!--suppress MybatisMapperXmlInspection, MavenModelInspection -->
            <rulesUri>file://${maven.multiModuleProjectDirectory}/ruleset.xml</rulesUri>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${minimal.maven.version}</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

    </plugins>


  </build>

</project>
